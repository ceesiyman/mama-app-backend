{
    "openapi": "3.0.0",
    "info": {
        "title": "Mama na Mwana API Documentation",
        "description": "API documentation for Mama na Mwana application - A comprehensive maternal health tracking system",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/ai-request": {
            "post": {
                "tags": [
                    "SMS Integration"
                ],
                "summary": "Process an SMS request and send a standard response",
                "description": "Takes a message from SMS that starts with 'hey ai' and sends a standard response",
                "operationId": "processAiRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message",
                                    "phone"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "The message content from SMS (without the 'hey ai' prefix)",
                                        "type": "string",
                                        "example": "What's the weather like today?"
                                    },
                                    "phone": {
                                        "description": "The phone number that sent the SMS",
                                        "type": "string",
                                        "example": "+12345678901"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "response": {
                                            "type": "string",
                                            "example": "hello how can i help you"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with username, email or phone number",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "description": "Email is required if phone_number is not provided",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone_number": {
                                        "description": "Phone number is required if email is not provided",
                                        "type": "string",
                                        "example": "+255123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+255123456789"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Authenticates a user with email/phone and returns a JWT token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Email or phone number",
                                        "type": "string",
                                        "example": "john@example.com or +255123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+255123456789"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout/{user_id}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "Logs out user by clearing their remember_token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to logout",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/user-profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Returns the currently authenticated user's data",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "description": "Refreshes the current authentication token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{user_id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "description": "Updates a user's profile information. Only provided fields will be updated.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    }
                }
            }
        },
        "/users/{user_id}/image": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile image",
                "description": "Returns user profile image path",
                "operationId": "getUserImage",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "image/profile123.png"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or no image available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found or no image available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile image",
                "description": "Updates user profile image",
                "operationId": "updateUserImage",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Image updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "image/profile123.png"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please upload a valid image"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/request-password-reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset via OTP",
                "description": "Sends an OTP to the user's email for password reset.",
                "operationId": "requestPasswordReset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent to your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify-otp-reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP and reset password",
                "description": "Verifies the OTP and resets the user's password.",
                "operationId": "verifyOtpReset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/journals/{user_id}": {
            "get": {
                "tags": [
                    "Journals"
                ],
                "summary": "Get all journals for a specific user",
                "description": "Returns a list of journal entries for the specified user",
                "operationId": "getJournals",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to fetch journals for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Journal"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No journals found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No journals found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/journals": {
            "post": {
                "tags": [
                    "Journals"
                ],
                "summary": "Create a new journal entry",
                "description": "Stores a new journal entry for a user",
                "operationId": "storeJournal",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "content"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user creating the journal",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "content": {
                                        "description": "The journal entry content",
                                        "type": "string",
                                        "example": "Today I felt the baby kick for the first time!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Journal created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Journal created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Journal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "content": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The content field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/journals/{id}": {
            "delete": {
                "tags": [
                    "Journals"
                ],
                "summary": "Delete a journal entry",
                "description": "Deletes a journal entry by its ID",
                "operationId": "deleteJournal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the journal to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Journal deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Journal deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Journal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Journal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mama-data": {
            "post": {
                "tags": [
                    "Mama Data"
                ],
                "summary": "Store new mama's pregnancy data",
                "description": "Creates a new pregnancy record for the mama user",
                "operationId": "storeMamaData",
                "requestBody": {
                    "description": "Mama's pregnancy information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "age_group"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_child": {
                                        "description": "Whether this is the first child",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "age_group": {
                                        "description": "Mother's age group",
                                        "type": "string",
                                        "enum": [
                                            "18-24 years old",
                                            "25-34 years old",
                                            "35-44 years old",
                                            "44 years old or above"
                                        ],
                                        "example": "25-34 years old"
                                    },
                                    "due_date": {
                                        "description": "Expected delivery date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31",
                                        "nullable": true
                                    },
                                    "first_day_circle": {
                                        "description": "First day of last menstrual period",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01",
                                        "nullable": true
                                    },
                                    "gestational_period": {
                                        "description": "Current pregnancy week (1-42 weeks)",
                                        "type": "integer",
                                        "maximum": 42,
                                        "minimum": 1,
                                        "example": 28,
                                        "nullable": true
                                    },
                                    "baby_gender": {
                                        "description": "Known or expected gender of the baby",
                                        "type": "string",
                                        "enum": [
                                            "boy",
                                            "girl",
                                            "i don't know yet"
                                        ],
                                        "example": "i don't know yet"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pregnancy data successfully recorded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mama data created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MamaData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mama-data/{user_id}": {
            "get": {
                "tags": [
                    "Mama Data"
                ],
                "summary": "Get mama's pregnancy data",
                "description": "Retrieves the most recent pregnancy data for a specific user",
                "operationId": "getMamaData",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MamaData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mama data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mama data not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mama-tips": {
            "get": {
                "tags": [
                    "Mama Tips"
                ],
                "summary": "Get all mama tips",
                "description": "Returns list of all mama tips with their categories",
                "operationId": "getMamaTips",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "tip_content": {
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "contents": {
                                                                    "type": "string"
                                                                },
                                                                "image": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Mama Tips"
                ],
                "summary": "Create a new mama tip",
                "description": "Creates a new mama tip with image",
                "operationId": "createMamaTip",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "tip_content"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Healthy Diet Tips"
                                    },
                                    "tip_content": {
                                        "type": "string",
                                        "example": "Eat plenty of fruits..."
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tip created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MamaTip"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/mama-tips/{id}": {
            "get": {
                "tags": [
                    "Mama Tips"
                ],
                "summary": "Get mama tip by ID",
                "description": "Returns a single mama tip with its categories",
                "operationId": "getMamaTipById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of mama tip to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "tip_content": {
                                                    "type": "string"
                                                },
                                                "image": {
                                                    "type": "string"
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "contents": {
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tip not found"
                    }
                }
            }
        },
        "/reminders/{user_id}": {
            "get": {
                "tags": [
                    "Reminders"
                ],
                "summary": "Get all reminders for a specific user",
                "description": "Returns a list of reminders for the specified user",
                "operationId": "getReminders",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to fetch reminders for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reminder"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No reminders found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No reminders found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reminders": {
            "post": {
                "tags": [
                    "Reminders"
                ],
                "summary": "Create a new reminder",
                "description": "Stores a new reminder for a user",
                "operationId": "storeReminder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "type",
                                    "reminder_time"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "doctor's appointment",
                                            "medicine",
                                            "medical tests"
                                        ],
                                        "example": "medicine"
                                    },
                                    "appointment": {
                                        "type": "string",
                                        "example": "visit therapist"
                                    },
                                    "reminder_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-03-21 14:30:00"
                                    },
                                    "question": {
                                        "description": "Optional question or note for the reminder",
                                        "type": "string",
                                        "example": "What should I ask my doctor?",
                                        "nullable": true
                                    },
                                    "dose_unit": {
                                        "type": "string",
                                        "enum": [
                                            "tablets",
                                            "drops",
                                            "capsule"
                                        ],
                                        "example": "tablets"
                                    },
                                    "medicine_details": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Vitamin D"
                                            },
                                            "dose": {
                                                "type": "string",
                                                "example": "2"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reminder created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Reminder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reminders/{id}": {
            "put": {
                "tags": [
                    "Reminders"
                ],
                "summary": "Update an existing reminder",
                "description": "Updates a reminder's information",
                "operationId": "updateReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reminder to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reminder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reminder updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Reminder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reminders"
                ],
                "summary": "Delete a reminder",
                "description": "Deletes a reminder by its ID",
                "operationId": "deleteReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reminder to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reminder deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reminders/{id}/status": {
            "patch": {
                "tags": [
                    "Reminders"
                ],
                "summary": "Update a reminder's status",
                "description": "Updates the completion status of a reminder",
                "operationId": "updateReminderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reminder to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status value (false=pending, true=completed)",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reminder status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Reminder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reminder not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Journal": {
                "required": [
                    "user_id",
                    "content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "Today I felt the baby kick for the first time!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-21T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-21T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "MamaData": {
                "required": [
                    "user_id",
                    "age_group",
                    "due_date",
                    "gestational_period"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the mama data record",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user this data belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "first_child": {
                        "description": "Whether this is the first child",
                        "type": "boolean",
                        "example": true
                    },
                    "age_group": {
                        "description": "Mother's age group",
                        "type": "string",
                        "enum": [
                            "18-24 years old",
                            "25-34 years old",
                            "35-44 years old",
                            "44 years old or above"
                        ],
                        "example": "25-34 years old"
                    },
                    "due_date": {
                        "description": "Expected delivery date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31"
                    },
                    "gestational_period": {
                        "description": "Current pregnancy week (1-42 weeks)",
                        "type": "integer",
                        "maximum": 42,
                        "minimum": 1,
                        "example": 28
                    },
                    "baby_gender": {
                        "description": "Known or expected gender of the baby",
                        "type": "string",
                        "enum": [
                            "boy",
                            "girl",
                            "i don't know yet"
                        ],
                        "example": "i don't know yet"
                    },
                    "created_at": {
                        "description": "Timestamp when the record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-13T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the record was last updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-13T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "MamaTip": {
                "required": [
                    "name",
                    "tip_content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Healthy Diet Tips"
                    },
                    "image": {
                        "type": "string",
                        "example": "image/tip123.png"
                    },
                    "tip_content": {
                        "type": "string",
                        "example": "Eat plenty of fruits and vegetables..."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Reminder": {
                "required": [
                    "user_id",
                    "type",
                    "reminder_time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "doctor's appointment",
                            "medicine",
                            "medical tests"
                        ],
                        "example": "medicine"
                    },
                    "appointment": {
                        "type": "string",
                        "example": "visit therapist",
                        "nullable": true
                    },
                    "reminder_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-21 14:30:00"
                    },
                    "dose_unit": {
                        "type": "string",
                        "enum": [
                            "tablets",
                            "drops",
                            "capsule"
                        ],
                        "example": "tablets",
                        "nullable": true
                    },
                    "medicine_details": {
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Vitamin D"
                            },
                            "dose": {
                                "type": "string",
                                "example": "2"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-21T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-21T12:00:00Z"
                    },
                    "status": {
                        "description": "Reminder completion status (false=pending, true=completed)",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "1234567890",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2023-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2023-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email/phone and password to get the authentication token",
                "name": "Token Based Authentication",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Mama Data",
            "description": "API Endpoints for managing mama's pregnancy data"
        },
        {
            "name": "SMS Integration",
            "description": "SMS Integration"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Journals",
            "description": "Journals"
        },
        {
            "name": "Mama Tips",
            "description": "Mama Tips"
        },
        {
            "name": "Reminders",
            "description": "Reminders"
        }
    ]
}